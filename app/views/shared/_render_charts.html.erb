<!-- This partial renders the charts for various objects -->
<!-- Series are built by methods available in the views helper -->

<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://d3js.org/d3-selection-multi.v0.4.min.js"></script>
<!-- Tab content for Measures -->
      <div class="row">
        <div class="col-md-6">
          <div id="progression" style="width:80%; height:400px;"></div>
        </div>
        <div class="col-md-6">
          <div class="tabbable tabs-left">
            <ul class="nav nav-tabs">
              <li class="active"><a href="#tab_percentage" data-toggle="tab"><%= t('Percentage') %> </a></li>
              <li><a href="#tab_added_value" data-toggle="tab"><%= t('AddedValue') %> </a></li>
              <li><a href="#tab_workload" data-toggle="tab"><%= t('Workload') %> </a></li>
            </ul>
            <div class="tab-content">
              <div class="tab-pane active" id="tab_percentage">
                <div id="impact" ></div>
              </div>  
              <div class="tab-pane" id="tab_added_value">
                <div id="added_value" ></div>
              </div>  
              <div class="tab-pane" id="tab_workload">
                <div id="workload" ></div>
              </div>
            </div>  
          </div>
        </div>
      </div>
      <!-- End of tab content -->
      
      
      <script>
          // Progression data
          
         var errors = <%= d3_chart_series_for(this_object).map { |measure| {index: measure.idx, count: measure.score}}.to_json.html_safe   %>;
      // Returns an array of hashes
      //       var errors = [{"index":"2017-01-14","count":"5.35"},{"index":"2017-01-15","count":"2.24"},{"index":"2017-01-16","count":"1.55"},{"index":"2017-01-17","count":"5.11"},{"index":"2017-01-18","count":"2.96"},{"index":"2017-01-19","count":"4.62"},{"index":"2017-01-20","count":"6.71"},{"index":"2017-01-21","count":"9.47"},{"index":"2017-01-22","count":"8.15"},{"index":"2017-01-23","count":"9.25"},{"index":"2017-01-24","count":"5.35"}];

         var x = d3.scaleTime()
          .domain([
              new Date(Date.parse('<%=history_date.strftime("%Y-%m-%d")%>')),
              new Date()
              ])
          .range([0,500]);
          
          var y = d3.scaleLinear()
          .domain([0,20])
          .range([0,300]);
      
          var xAxis = d3.axisTop(x)
          .ticks(10);
          
          var yAxis = d3.axisRight(y)
          .ticks(5);
          
          var graph =  d3.select('#progression')
          .append('svg')
          .attr('width', 650)
          .attr('height', 400);
          
          var bars = graph.selectAll('rect')
          .data(errors);
          
          var newBars = bars.enter();
          
          var color = d3.scaleOrdinal(d3.schemeCategory10);
          
    graph.append('g')
        .attr('class', 'x axis')
        .attr("transform", "translate(100,50)")
        .call(xAxis);
        
    graph.append('g')
        .attr('class', 'y axis')
        .attr("transform", "translate(600,50)")
        .call(yAxis);
        
    newBars.append('rect')
        .attr("transform", "translate(90,0)")
        .attr('x',function(d, i) {
          return x(Date.parse(d.index));})
        .attr('y',50)
        .attr('height', function(d,i) {
          return y(d.count);})
        .attr('width', 20 )
        .attr('fill', color());
             
      </script>
      
      <script>
        var errors_impact = <%= d3_errors_chart_series_for(this_object).
        map { |measure| {index: measure.odq_object_id,
            code: measure.odq_object_code,
            name: measure.odq_object_name,
            count: measure.error_count,
            cost: measure.added_value,
            workload: measure.workload,
            url: measure.odq_object_url }}.to_json.html_safe %>;
        
        var pie = d3.pie()
            .value(function(d) { return d.count })

        var slices = pie(errors_impact);
        
        var arc = d3.arc()
           .innerRadius(0)
           .outerRadius(150);

        // helper that returns a color based on an ID
        var color = d3.scaleOrdinal(d3.schemeCategory20);

          var graph =  d3.select('#impact')
          .append('svg')
          .attr('width', 650)
          .attr('height', 400);
          
        var g = graph.append('g')
        .attr('transform', 'translate(200,200)')
        
        g.selectAll('path.slice')
        .data(slices)
          .enter()
            .append('path')
              .attr('class', 'slice')
              .attr('d', arc)
              .attr('fill', function(d) {
                return color(d.data.index);
                });
      </script>